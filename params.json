{"name":"HyperFlex","tagline":"Variability Analysis, Composition and Resolution Plugins","body":"## [HyperFlex](http://robotics-unibg.github.com/HyperFlex/)\r\n\r\n**HyperFlex** is a collection of Eclipse plugins that support the development of robotics software product lines, a family of similar applications that are built reusing a set of software components and share the same architecture. The SPL life cycle consists in three main phases: domain analysis, product line development, and product derivation.\r\n\r\nMore information about HyperFlex and the development process can be found in [1].\r\n\r\n\r\n### Domain Analysis\r\n\r\nHyperFlex provides a graphical tool for the analysis and the modeling of the variability in terms of Feature Models.\r\n\r\n### Product line Development\r\n\r\nHyperFlex provides a set of graphical tools, which allow the design of software product line architectures (aka the Template System Model) for [ROS](http://www.ros.org), [Orocos](http://www.orocos.org) and [Rapyuta](http://www.rapyuta.org). Additionally HyperFlex provides a tool for defining variability resolution patterns (aka the Resolution Model).\r\n\r\nHyperFlex is also integrated with [BRIDE](http://www.best-of-robotics.org/bride/), which can be used for designing the Template System Model. In order to use HyperFlex with BRIDE it is necessary to checkout the specific branch.\r\n\r\n### Product Derivation\r\n\r\nHyperFlex provides a tool for selecting the desired functionalities of an application and automatically generating its architectural model.\r\n\r\n## How to install the Plugin\r\n\r\nThe easiest way to install the plugins is using the Makefile\r\n* Open the shell\r\n* Download the [archive](http://lucagherardi.it/projects/HyperFlex/HyperFlexSetup.zip) (`wget http://lucagherardi.it/projects/HyperFlex/HyperFlexSetup.zip`)\r\n* Unzip it in a folder called `HyperFlex` (`unzip HyperFlexSetup.zip -d HyperFlex`)\r\n* Access the folder (`cd HyperFlex`) and type `make`\r\n* The process installs Eclipse and all the required plugins\r\n* After that you can run it from the folder `eclipse` located in the same folder of the `Makefile`\r\n\r\nAlternativelly the plugin can be installed from source, by accessing the [github repository](https://github.com/Robotics-UniBG/HyperFlex), or by means of the [update site](http://lucagherardi.it/projects/HyperFlex/UpdateSite) (if no plugins are showed try to unflag `Groups item by category`).\r\n\r\nThese installations require to setup the following environment:\r\n\r\n* Download Eclipse Modeling Tools version from [Eclipse website](http://www.eclipse.org/downloads/)\r\n* Install the Graphical Modeling Tooling plugin from this [update site](http://download.eclipse.org/modeling/gmp/gmf-tooling/updates/releases/)\r\n* Install the Epsilon plugin from its update site ([Epsilon website](http://www.eclipse.org/epsilon/download/))\r\n\r\n\r\n\r\n## Developers\r\n\r\nLuca Gherardi (lucagh  at ethz dot ch), Institute for Dynamic Systems and Control, ETH Zurich.\r\n\r\nIn collaboration with: Davide Brugali, University of Bergamo.\r\n\r\n## More information\r\n\r\nMore information can be found on the following papers:\r\n\r\n* [1] L. Gherardi. [Variability modeling and resolution in component-based robotics systems](http://lucagherardi.it/wp-content/papercite-data/pdf/gherardi2013variability.pdf). PhD Thesis, April 2013.\r\n* [2] L. Gherardi, D. Brugali. [An eclipse-based Feature Models toolchain](http://www.best-of-robotics.org/pages/publications/UniBergamo_EclipseIT2011.pdf). _In Proc. of the 6th Workshop of the Italian Eclipse Community ([Eclipse-IT 2011](http://2011.eclipse-it.org/home/))_, September 22-23, 2011, Milano, Italy.","google":"UA-40202086-1","note":"Don't delete this file! It's used internally to help with page regeneration."}